<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PersonalAssistantTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2020-04-13T04:12:48" hostname="DESKTOP-8SLP8FQ" time="0.16">
  <properties/>
  <testcase name="start" classname="PersonalAssistantTest" time="0.16">
    <failure message="java.lang.AssertionError: Wrong answer in test #1&#10;&#10;You should output 20 lines (for the count number 10).&#10;Lines found: 19&#10;Your output:&#10;Hello! My name is Aid.&#10;I was created in 2018.&#10;Please, remind me your name.&#10;What a great name you have, Marry!&#10;Let me guess your age.&#10;Enter remainders of dividing your age by 3, 5 and 7.&#10;Your age is 40; that's a good time to start programming!&#10;Now I will prove to you that I can count to any number you want.&#10;10!&#10;9!&#10;8!&#10;7!&#10;6!&#10;5!&#10;4!&#10;3!&#10;2!&#10;1!&#10;Completed, have a nice day!&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Hello! My name is Aid.&#10;I was created in 2018.&#10;Please, remind me your name.&#10;&gt;Marry&#10;What a great name you have, Marry!&#10;Let me guess your age.&#10;Enter remainders of dividing your age by 3, 5 and 7.&#10;&gt;1 0 5&#10;Your age is 40; that's a good time to start programming!&#10;Now I will prove to you that I can count to any number you want.&#10;&gt;10&#10;10!&#10;9!&#10;8!&#10;7!&#10;6!&#10;5!&#10;4!&#10;3!&#10;2!&#10;1!&#10;Completed, have a nice day!" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #1

You should output 20 lines (for the count number 10).
Lines found: 19
Your output:
Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
10!
9!
8!
7!
6!
5!
4!
3!
2!
1!
Completed, have a nice day!

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
&gt;Marry
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
&gt;1 0 5
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
&gt;10
10!
9!
8!
7!
6!
5!
4!
3!
2!
1!
Completed, have a nice day!
	at org.junit.Assert.fail(Assert.java:88)
	at org.hyperskill.hstest.v6.stage.BaseStageTest.start(BaseStageTest.java:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Hello! My name is Aid.
I was created in 2018.
Please, remind me your name.
>Marry
What a great name you have, Marry!
Let me guess your age.
Enter remainders of dividing your age by 3, 5 and 7.
>1 0 5
Your age is 40; that's a good time to start programming!
Now I will prove to you that I can count to any number you want.
>10
10!
9!
8!
7!
6!
5!
4!
3!
2!
1!
Completed, have a nice day!
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
